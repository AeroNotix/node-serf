// Generated by CoffeeScript 1.7.1
(function() {
  var EventEmitter,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  EventEmitter = require('events').EventEmitter;

  exports.Stream = (function(_super) {
    __extends(Stream, _super);

    function Stream(client, seq) {
      Stream.__super__.constructor.apply(this, arguments);
      this._client = client;
      this._seq = seq;
    }

    Stream.prototype.stop = function(cb) {
      if (cb == null) {
        cb = function() {};
      }
      this._client.stop({
        Stop: this._seq
      }, cb);
      return process.nextTick((function(_this) {
        return function() {
          return _this.emit('stop');
        };
      })(this));
    };

    return Stream;

  })(EventEmitter);

}).call(this);
