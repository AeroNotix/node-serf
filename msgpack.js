// Generated by CoffeeScript 1.7.1
(function() {
  'use strict';
  var Transform, debug, msgpack,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Transform = require('stream').Transform;

  debug = require('debug')('serf:msgpack');

  msgpack = require('msgpack-js-v5-ng');

  exports.Decode = (function(_super) {
    __extends(Decode, _super);

    function Decode() {
      this._transform = __bind(this._transform, this);
      Decode.__super__.constructor.apply(this, arguments);
      this._cache = new Buffer(0);
      this.unpack = msgpack.decode;
      this._writableState.objectMode = false;
      this._readableState.objectMode = true;
      this.once('end', function() {
        return debug('ended');
      });
    }

    Decode.prototype._transform = function(chunk, enc, done) {
      var e, popped, trailing, value, _ref;
      while (chunk.length > 0) {
        popped = chunk.slice(0, 1);
        chunk = chunk.slice(1, chunk.length);
        this._cache = Buffer.concat([this._cache, popped]);
        try {
          _ref = this.unpack(this._cache), value = _ref.value, trailing = _ref.trailing;
        } catch (_error) {
          e = _error;
          debug('faild to unpack with error: %s', e.message);
        }
        if (trailing === 0) {
          this.push(value);
          this._cache = new Buffer(0);
        }
        if (chunk.length === 0) {
          break;
        }
      }
      return done();
    };

    return Decode;

  })(Transform);

}).call(this);
